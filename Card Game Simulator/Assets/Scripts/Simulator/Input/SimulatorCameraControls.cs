//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Scripts/Simulator/Input/SimulatorCameraControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SimulatorCameraControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SimulatorCameraControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SimulatorCameraControls"",
    ""maps"": [
        {
            ""name"": ""Camera"",
            ""id"": ""14ca398f-f69f-4ddf-9ae6-f62acc20d8b8"",
            ""actions"": [
                {
                    ""name"": ""Drag"",
                    ""type"": ""Button"",
                    ""id"": ""418475f1-b98d-41d6-b54c-b091281b28c8"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Two Finger Contact"",
                    ""type"": ""Button"",
                    ""id"": ""8bda4311-fb9c-4d44-aeff-92037f9f0349"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""First Finger Position"",
                    ""type"": ""Value"",
                    ""id"": ""2f4e7b61-99fe-4065-b140-73ce1df241b1"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Second Finger Position"",
                    ""type"": ""Value"",
                    ""id"": ""f37bb247-4ac3-4cdd-b146-978995f02a06"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""First Finger Delta"",
                    ""type"": ""Value"",
                    ""id"": ""5af622f3-aed5-4e18-bd91-4908376c2d71"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Second Finger Delta"",
                    ""type"": ""Value"",
                    ""id"": ""c180725e-585f-4c78-a7f7-7120eed40b6e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Mouse Scroll"",
                    ""type"": ""Value"",
                    ""id"": ""25a8f8b2-87b0-4383-a758-12023eae57d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Keyboard Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""18ee9280-6d84-4e61-bfb7-83956c14fe6a"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""fe8e87c3-1fa6-462e-b450-629ebd8ec180"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f14424d1-ff65-40a3-b1d2-5010529eefc2"",
                    ""path"": ""<Touchscreen>/Press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Drag"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e98fe994-2083-4f90-89a8-e8c4dedd7f3b"",
                    ""path"": ""<Touchscreen>/touch1/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Two Finger Contact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66ee23a5-8808-4124-8f0e-8b35ff6d3f2a"",
                    ""path"": ""<Touchscreen>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""First Finger Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8783fa94-1fa2-4626-bd9e-fe6099f835d0"",
                    ""path"": ""<Touchscreen>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Second Finger Position"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""24b4822a-8a17-4d14-a539-347f4a75283f"",
                    ""path"": ""<Touchscreen>/touch0/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""First Finger Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1027c3a0-d505-4241-86f8-6cf0afd8cd8b"",
                    ""path"": ""<Touchscreen>/touch1/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Second Finger Delta"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cb7712b-347b-4934-87f7-ee103391120b"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Scroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""14d0eb2e-b859-4cf5-9cc4-87ec2f810510"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""726754a7-e85d-4461-838f-99a300a617ae"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""53e31323-5e69-40ca-a32f-2b3ac656f24b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Keyboard Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Camera
        m_Camera = asset.FindActionMap("Camera", throwIfNotFound: true);
        m_Camera_Drag = m_Camera.FindAction("Drag", throwIfNotFound: true);
        m_Camera_TwoFingerContact = m_Camera.FindAction("Two Finger Contact", throwIfNotFound: true);
        m_Camera_FirstFingerPosition = m_Camera.FindAction("First Finger Position", throwIfNotFound: true);
        m_Camera_SecondFingerPosition = m_Camera.FindAction("Second Finger Position", throwIfNotFound: true);
        m_Camera_FirstFingerDelta = m_Camera.FindAction("First Finger Delta", throwIfNotFound: true);
        m_Camera_SecondFingerDelta = m_Camera.FindAction("Second Finger Delta", throwIfNotFound: true);
        m_Camera_MouseScroll = m_Camera.FindAction("Mouse Scroll", throwIfNotFound: true);
        m_Camera_KeyboardRotate = m_Camera.FindAction("Keyboard Rotate", throwIfNotFound: true);
    }

    ~@SimulatorCameraControls()
    {
        UnityEngine.Debug.Assert(!m_Camera.enabled, "This will cause a leak and performance issues, SimulatorCameraControls.Camera.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Camera
    private readonly InputActionMap m_Camera;
    private List<ICameraActions> m_CameraActionsCallbackInterfaces = new List<ICameraActions>();
    private readonly InputAction m_Camera_Drag;
    private readonly InputAction m_Camera_TwoFingerContact;
    private readonly InputAction m_Camera_FirstFingerPosition;
    private readonly InputAction m_Camera_SecondFingerPosition;
    private readonly InputAction m_Camera_FirstFingerDelta;
    private readonly InputAction m_Camera_SecondFingerDelta;
    private readonly InputAction m_Camera_MouseScroll;
    private readonly InputAction m_Camera_KeyboardRotate;
    public struct CameraActions
    {
        private @SimulatorCameraControls m_Wrapper;
        public CameraActions(@SimulatorCameraControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Drag => m_Wrapper.m_Camera_Drag;
        public InputAction @TwoFingerContact => m_Wrapper.m_Camera_TwoFingerContact;
        public InputAction @FirstFingerPosition => m_Wrapper.m_Camera_FirstFingerPosition;
        public InputAction @SecondFingerPosition => m_Wrapper.m_Camera_SecondFingerPosition;
        public InputAction @FirstFingerDelta => m_Wrapper.m_Camera_FirstFingerDelta;
        public InputAction @SecondFingerDelta => m_Wrapper.m_Camera_SecondFingerDelta;
        public InputAction @MouseScroll => m_Wrapper.m_Camera_MouseScroll;
        public InputAction @KeyboardRotate => m_Wrapper.m_Camera_KeyboardRotate;
        public InputActionMap Get() { return m_Wrapper.m_Camera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraActions set) { return set.Get(); }
        public void AddCallbacks(ICameraActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraActionsCallbackInterfaces.Add(instance);
            @Drag.started += instance.OnDrag;
            @Drag.performed += instance.OnDrag;
            @Drag.canceled += instance.OnDrag;
            @TwoFingerContact.started += instance.OnTwoFingerContact;
            @TwoFingerContact.performed += instance.OnTwoFingerContact;
            @TwoFingerContact.canceled += instance.OnTwoFingerContact;
            @FirstFingerPosition.started += instance.OnFirstFingerPosition;
            @FirstFingerPosition.performed += instance.OnFirstFingerPosition;
            @FirstFingerPosition.canceled += instance.OnFirstFingerPosition;
            @SecondFingerPosition.started += instance.OnSecondFingerPosition;
            @SecondFingerPosition.performed += instance.OnSecondFingerPosition;
            @SecondFingerPosition.canceled += instance.OnSecondFingerPosition;
            @FirstFingerDelta.started += instance.OnFirstFingerDelta;
            @FirstFingerDelta.performed += instance.OnFirstFingerDelta;
            @FirstFingerDelta.canceled += instance.OnFirstFingerDelta;
            @SecondFingerDelta.started += instance.OnSecondFingerDelta;
            @SecondFingerDelta.performed += instance.OnSecondFingerDelta;
            @SecondFingerDelta.canceled += instance.OnSecondFingerDelta;
            @MouseScroll.started += instance.OnMouseScroll;
            @MouseScroll.performed += instance.OnMouseScroll;
            @MouseScroll.canceled += instance.OnMouseScroll;
            @KeyboardRotate.started += instance.OnKeyboardRotate;
            @KeyboardRotate.performed += instance.OnKeyboardRotate;
            @KeyboardRotate.canceled += instance.OnKeyboardRotate;
        }

        private void UnregisterCallbacks(ICameraActions instance)
        {
            @Drag.started -= instance.OnDrag;
            @Drag.performed -= instance.OnDrag;
            @Drag.canceled -= instance.OnDrag;
            @TwoFingerContact.started -= instance.OnTwoFingerContact;
            @TwoFingerContact.performed -= instance.OnTwoFingerContact;
            @TwoFingerContact.canceled -= instance.OnTwoFingerContact;
            @FirstFingerPosition.started -= instance.OnFirstFingerPosition;
            @FirstFingerPosition.performed -= instance.OnFirstFingerPosition;
            @FirstFingerPosition.canceled -= instance.OnFirstFingerPosition;
            @SecondFingerPosition.started -= instance.OnSecondFingerPosition;
            @SecondFingerPosition.performed -= instance.OnSecondFingerPosition;
            @SecondFingerPosition.canceled -= instance.OnSecondFingerPosition;
            @FirstFingerDelta.started -= instance.OnFirstFingerDelta;
            @FirstFingerDelta.performed -= instance.OnFirstFingerDelta;
            @FirstFingerDelta.canceled -= instance.OnFirstFingerDelta;
            @SecondFingerDelta.started -= instance.OnSecondFingerDelta;
            @SecondFingerDelta.performed -= instance.OnSecondFingerDelta;
            @SecondFingerDelta.canceled -= instance.OnSecondFingerDelta;
            @MouseScroll.started -= instance.OnMouseScroll;
            @MouseScroll.performed -= instance.OnMouseScroll;
            @MouseScroll.canceled -= instance.OnMouseScroll;
            @KeyboardRotate.started -= instance.OnKeyboardRotate;
            @KeyboardRotate.performed -= instance.OnKeyboardRotate;
            @KeyboardRotate.canceled -= instance.OnKeyboardRotate;
        }

        public void RemoveCallbacks(ICameraActions instance)
        {
            if (m_Wrapper.m_CameraActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraActions @Camera => new CameraActions(this);
    public interface ICameraActions
    {
        void OnDrag(InputAction.CallbackContext context);
        void OnTwoFingerContact(InputAction.CallbackContext context);
        void OnFirstFingerPosition(InputAction.CallbackContext context);
        void OnSecondFingerPosition(InputAction.CallbackContext context);
        void OnFirstFingerDelta(InputAction.CallbackContext context);
        void OnSecondFingerDelta(InputAction.CallbackContext context);
        void OnMouseScroll(InputAction.CallbackContext context);
        void OnKeyboardRotate(InputAction.CallbackContext context);
    }
}
